# .env - Environment Variables for Enhanced Trading Bot
################################################################################
# IMPORTANT: DO NOT COMMIT THIS FILE TO PUBLIC VERSION CONTROL (e.g., GitHub) #
# This file contains sensitive API keys and personal credentials.              #
################################################################################

# =============================================================================
# DATABASE CONNECTION
# =============================================================================
# Database URL - SQLite by default, can be PostgreSQL for production
DATABASE_URL=sqlite:///data/enhanced_trading_bot.db

# =============================================================================
# APP METADATA
# =============================================================================
# Name of your trading bot shown on the dashboard
APP_NAME="Enhanced Trading Bot"

# Dashboard Authentication - CHANGE THESE FOR PRODUCTION!
APP_USER_ID=admin
APP_PASSWORD=admin123

# =============================================================================
# EXCHANGE API CREDENTIALS
# =============================================================================

# Kraken Exchange API Credentials (PRIMARY EXCHANGE)
# Get these from: https://www.kraken.com/u/security/api
KRAKEN_API_KEY=6NHkexzyb0J8+Ac7dNxbu+wrquirO5d4RVGshwWB4eqO5lizBobu0bdD
KRAKEN_SECRET=wIW8kTXFWVSzrqx7c9WwTPXbRlURWFWJ2m6u25g7UX7aMld3tKV/cY3n35AzYEU3T4xhvdgZkoVXR9VdgiviHQ==
KRAKEN_SANDBOX=true

# Alpaca API Credentials (for US stocks/crypto - optional)
# Get your API keys from Alpaca: https://alpaca.markets/
APCA_API_KEY_ID=PKXGUYUHP4WX3N8UJQQR
APCA_API_SECRET_KEY=K3zxquPE1e6aJcgG1DUSvHXTdZq25FPRwum0XzsK
ALPACA_PAPER_BASE_URL=https://paper-api.alpaca.markets
ALPACA_STREAM_DATA_URL=wss://stream.data.alpaca.markets/v1beta3/crypto/us

# Binance Exchange API Credentials (for future use)
# BINANCE_API_KEY=your_binance_api_key_here
# BINANCE_SECRET=your_binance_secret_here
# BINANCE_SANDBOX=true

# Coinbase Pro API Credentials (for future use)  
# COINBASE_API_KEY=your_coinbase_api_key_here
# COINBASE_SECRET=your_coinbase_secret_here
# COINBASE_PASSPHRASE=your_coinbase_passphrase_here
# COINBASE_SANDBOX=true

# Enhanced Chat Settings
GOOGLE_AI_ENABLED=true
GOOGLE_AI_API_KEY=your_gemini_api_key_here
CHAT_MEMORY_SIZE=25
CHAT_VOICE_ENABLED=true
CHAT_PROACTIVE_INSIGHTS=true
# Google AI (Generative AI) - Required for advanced chatbot features via Gemini
# Get your FREE API key from Google AI Studio: https://makersuite.google.com/
# If this is empty or invalid, the bot chat will default to basic hardcoded responses.
GOOGLE_AI_API_KEY=AIzaSyB0UGn1t_KCMnD4M2WnmsCAwivmLr2T134 # <--- YOUR ACTUAL GOOGLE AI KEY HERE
GOOGLE_AI_ENABLED=true                                 # <--- UNCOMMENTED AND ENSURED CORRECT NAME
# (If commented, the default 'gemini-pro' from core/config.py will be used)
# GOOGLE_AI_MODEL=gemini-pro

# =============================================================================
# TRADING CONFIGURATION
# =============================================================================

# Trading Mode (true for live trading, false for paper trading)
LIVE_TRADING_ENABLED=false

# Default crypto exchange for data fetching
DEFAULT_EXCHANGE=kraken

# Default Trading Symbols (comma-separated)
# Ensure these symbols are available on your chosen DEFAULT_EXCHANGE
TRADING_SYMBOLS=BTC/USD,ETH/USD,ADA/USD
DEFAULT_TRAINING_SYMBOLS=BTC/USD,ETH/USD,ADA/USD

# Default Timeframes (comma-separated)
TRADING_TIMEFRAMES=1h,4h,1d

# Initial Capital for Paper Trading
INITIAL_CAPITAL=10000

# Control whether CCXT (real exchange data fetching) should be used
CCXT_AVAILABLE=true

# =============================================================================
# RISK MANAGEMENT
# =============================================================================

# Maximum risk per trade (as decimal, e.g., 0.02 = 2%)
MAX_RISK_PER_TRADE=0.02

# Maximum portfolio risk (as decimal, e.g., 0.10 = 10%)
MAX_PORTFOLIO_RISK=0.10

# Emergency stop loss (as decimal, e.g., 0.15 = 15%)
EMERGENCY_STOP_LOSS=0.15

# Minimum trade value for notifications
TRADE_NOTIFICATION_MIN_VALUE=10.0

# =============================================================================
# EXTERNAL API KEYS & DATA SOURCES
# =============================================================================

# Google AI (Gemini) API Key - for enhanced chatbot features
# Get your FREE key from Google AI Studio: https://makersuite.google.com/
GOOGLE_AI_API_KEY=your_gemini_api_key_here
GOOGLE_AI_ENABLED=true
GOOGLE_AI_MODEL=gemini-pro

# CoinMarketCap API Key (optional, for external market data reference)
# Get your FREE key from: https://coinmarketcap.com/api/
COINMARKETCAP_API_KEY=your_coinmarketcap_api_key_here

# Alpha Vantage API Key (for additional market data)
ALPHA_VANTAGE_API_KEY=your_alpha_vantage_key

# NewsAPI Key (for sentiment analysis)
NEWS_API_KEY=your_news_api_key

# Twitter API Keys (for social sentiment)
TWITTER_API_KEY=your_twitter_api_key
TWITTER_API_SECRET=your_twitter_api_secret
TWITTER_ACCESS_TOKEN=your_twitter_access_token
TWITTER_ACCESS_SECRET=your_twitter_access_secret

# =============================================================================
# NOTIFICATION SYSTEM CONFIGURATION
# =============================================================================

# Email Configuration for Alerts
EMAIL_ENABLED=false
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SENDER_EMAIL=your_email@gmail.com
SENDER_PASSWORD=your_gmail_app_password_here
RECIPIENT_EMAIL=alerts@yourdomain.com

# SLACK NOTIFICATIONS
# Create an Incoming Webhook URL in your Slack workspace
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_CHANNEL=#trading-bot
SLACK_USERNAME=EnhancedTradingBot

# Discord Notifications
# Create a Webhook URL in your Discord Server Settings -> Integrations -> Webhooks
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK

# Telegram Bot for Notifications
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
TELEGRAM_CHAT_ID=your_telegram_chat_id

# Twilio SMS Notifications (requires paid Twilio account)
TWILIO_ACCOUNT_SID=your_twilio_account_sid_here
TWILIO_AUTH_TOKEN=your_twilio_auth_token_here
TWILIO_PHONE_NUMBER=your_twilio_phone_number_here
RECIPIENT_PHONE_NUMBER=your_recipient_phone_number_here

# =============================================================================
# NOTIFICATION BEHAVIOR SETTINGS
# =============================================================================

# Control which types of notifications to send
NOTIFY_TRADES=true
NOTIFY_SYSTEM_EVENTS=true
NOTIFY_ERRORS=true
NOTIFY_PERFORMANCE=true
NOTIFY_STRATEGY_CHANGES=true

# Notification timing and filtering
PERFORMANCE_NOTIFICATION_INTERVAL=3600  # 1 hour in seconds
ERROR_NOTIFICATION_COOLDOWN=300         # 5 minutes in seconds
MIN_NOTIFICATION_PRIORITY=MEDIUM        # DEBUG, INFO, MEDIUM, HIGH, CRITICAL, EMERGENCY
NOTIFICATION_HISTORY_MAX_LENGTH=100

# =============================================================================
# ENHANCED CHAT SETTINGS
# =============================================================================

# Chat system configuration
CHAT_MEMORY_SIZE=25
CHAT_VOICE_ENABLED=true
CHAT_PROACTIVE_INSIGHTS=true

# =============================================================================
# SYSTEM CONFIGURATION
# =============================================================================

# How often market data updates are broadcasted (in seconds)
BROADCAST_INTERVAL_SECONDS=15

# How long to wait after an error before retrying (in seconds)
ERROR_RETRY_INTERVAL_SECONDS=30

# How often to sync account balances and positions (in minutes)
ALPACA_SYNC_INTERVAL_MINUTES=5

# Directory where strategy Python files are located
STRATEGIES_DIR=strategies

# Default path for saving ML models and scalers
DEFAULT_MODEL_SAVE_PATH=models/

# =============================================================================
# SECURITY AND ENCRYPTION
# =============================================================================

# Secret key for encrypting sensitive data - CHANGE FOR PRODUCTION!
SECRET_KEY=your_secret_key_for_encryption_change_this

# JWT Secret for dashboard authentication - CHANGE FOR PRODUCTION!
JWT_SECRET=your_jwt_secret_for_dashboard_auth

# =============================================================================
# LOGGING AND DEBUGGING
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Enable detailed logging and debugging
DEBUG=false
VERBOSE_LOGGING=false

# Sentry DSN for error tracking (optional)
SENTRY_DSN=your_sentry_dsn_for_error_tracking

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development mode (enables additional debugging)
DEVELOPMENT_MODE=true

# Flask debug mode for web dashboard
FLASK_DEBUG=true

# Test mode (uses mock data instead of real API calls)
TEST_MODE=false

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Number of worker processes
WORKER_PROCESSES=1

# Cache timeout in seconds
CACHE_TIMEOUT=3600

# Rate limit delay in seconds
RATE_LIMIT_DELAY=1.2

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================

# Backup directory
BACKUP_DIR=backups/

# Automatic backup interval in hours
BACKUP_INTERVAL_HOURS=24

# Maximum number of backups to keep
MAX_BACKUPS=30

# =============================================================================
# CLOUD DEPLOYMENT (for production)
# =============================================================================

# AWS Configuration
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key
# AWS_DEFAULT_REGION=us-east-1
# AWS_S3_BUCKET=your-trading-bot-bucket

# Google Cloud Configuration
# GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account.json
# GOOGLE_CLOUD_PROJECT=your-project-id

# Redis URL for caching (optional)
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# MIGRATION FROM EXISTING BOT
# =============================================================================

# If migrating from your existing OctoBot/Industrial Trading Bot:
# 1. Copy your working API keys from your current .env
# 2. Update the database path if you want to preserve data
# 3. Adjust notification settings to match your preferences
# 4. Keep your existing APP_USER_ID and APP_PASSWORD if desired

# =============================================================================
# SECURITY NOTES AND INSTRUCTIONS
# =============================================================================

# 1. SECURITY NOTICE:
#    - Never commit this file with real credentials to version control
#    - Add .env to your .gitignore file (already included in our setup)
#    - Use strong, unique passwords and API keys
#    - Regularly rotate your API keys

# 2. API KEY PERMISSIONS:
#    For Kraken, your API key needs these permissions:
#    - Query Funds
#    - Query Open Orders  
#    - Query Closed Orders
#    - Query Trades History
#    - Place & Cancel Orders (only for live trading)

# 3. TESTING SETUP:
#    - Always start with LIVE_TRADING_ENABLED=false
#    - Use sandbox/testnet APIs when available
#    - Test thoroughly before enabling live trading

# 4. PRODUCTION SETUP:
#    - Use strong SECRET_KEY and JWT_SECRET
#    - Enable proper monitoring and alerting
#    - Set up regular backups
#    - Use a production database (PostgreSQL)
#    - Change default APP_USER_ID and APP_PASSWORD

# 5. EMAIL SETUP:
#    - For Gmail, use App Passwords, not your regular password
#    - Enable 2FA and create an app-specific password
#    - Test email functionality before relying on alerts

# 6. GETTING API KEYS:
#    Kraken: https://www.kraken.com/u/security/api
#    Alpaca: https://alpaca.markets/
#    Binance: https://www.binance.com/en/my/settings/api-management
#    Coinbase: https://pro.coinbase.com/profile/api
#    Google AI: https://makersuite.google.com/
#    CoinMarketCap: https://coinmarketcap.com/api/
#    Alpha Vantage: https://www.alphavantage.co/support/#api-key